<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <global-method-security pre-post-annotations="enabled"/>

    <http use-expressions="true">
        <intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/account**" access="hasRole('ROLE_USER')"/>
        <csrf disabled="true"/>
        <form-login login-page="/login.html" />
        <logout logout-url="/logout"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="bcrypt"/>
            <jdbc-user-service data-source-ref="dataSource"
                authorities-by-username-query=
                    "select u.name, r.name from user u join user_role ur on
                    u.id=ur.users_id join role r on ur.roles_id=r.id
                    where u.name=?"
                users-by-username-query="select name, password, enabled from user where name=?"
                    />

            <!--<user-service>
                <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
                <user name="lord" password="777" authorities="ROLE_USER"/>
            </user-service>-->
        </authentication-provider>
    </authentication-manager>

</beans:beans>